/*
 * - Set variables
 * - Define generic|extendable styles
 */
/* Grid */
$columns = 12 // number of columns
$gutter = 12 // guuter width

/* Typography */
$font-base = 'Helvetica Neue', Helvetica, Arial, sans-serif  // texte courant, corps de texte
$font-headings = 'Open Sans', Impact, 'Arial Black', 'Helvetica Neue', Helvetica, sans-serif  // titres
$font-secondary = 'Open Sans', 'Helvetica Neue', Helvetica, sans-serif // call to action... etc.
$font-icon = '20mn' // call to action... etc.
$font-native = 'Georgia', serif

/* Colors */
$color-base = #4c4d4e  // default text color
$color-base-lighten = #e7e7e7
$color-secondary = #b7b7b7  // couleur de texte secondaire
$color-tertiary = #878787   // couleur de texte secondaire 2
$color-links = #0091aa  // default links color
$color-highlight = #cc190f  // highlighted text color

$color-bg-base = #f8f8f8 // background color

$color-default = #0b4892
$color-sport  = #00b9f3
$color-entertainment = #cc190f
$color-economy = #053042
$color-community = #930b48
$color-weird = #ef2a82
$color-partner = #ff5400
$color-planet = #48930b
$color-media = #000000
$color-hightech = #686868
$color-native = #fff7e2

/* Sections */
$base               = (base          $color-base)
$default            = (default       $color-default)
$sport              = (sport         $color-sport)
$entertainment      = (entertainment $color-entertainment)
$economy            = (economy       $color-economy)
$community          = (community     $color-community)
$weird              = (weird         $color-weird)
$partner            = (partner       $color-partner)
$planet             = (planet        $color-planet)
$media              = (media         $color-media)
$hightech           = (hightech      $color-hightech)
$native             = (native        $color-native)

$colors = $base $default $sport $entertainment $economy $community $weird $partner $planet $media $hightech $native

/* Generic styles for backgrounds and texts colors */
for $item in $colors
    $.border-color-{$item}
        border 1px solid $item[1]

    $.bg-{$item}
         background-color $item[1]

    .color-{$item}
        color $item[1]

/* Extendable styles */
.font-secondary
    font-family $font-secondary
    font-weight bold
    font-size 1.1rem
    text-transform uppercase

.responsive
    display block
    width 100%
    max-width 100%
    height auto

/* Typography styles */
.bold
    font-weight bold

.italic
    font-style italic

.align-center
    text-align center

.align-left
    text-align left

.align-right
    text-align right

.align-justify
    text-align justify

.uppercase
    text-transform uppercase

.list-pos-outside
.list-pos-outside li
    list-style-position inside
    padding-left 1em
    text-indent -1em

.list-type-none
    list-style-type none

/* Boxes display & positionning styles */
.inline
    display inline

    > li
        display inline

.inline-block
    display inline-block

.hidden
    display none

.vsb-hidden
    visibility hidden

.float-left
    float left!important

.float-right
    float right!important

.clearfix
    &:after
        content ""
        display block
        height 0
        clear both
        visibility hidden

/* Media Queries */
$lg-min-width = 960px
$md-min-width = 768px
$sm-min-width = 420px
/* @TODO: create a mixin to generate media queries according to breakpoints
 * e.g. : mq(xs,sm) would create a media query for [xs] and [sm] sizes
 */
$media-lg = "screen and (min-width: " + $lg-min-width + ")"
$media-md = "screen and (min-width: " + $md-min-width + ")"
$media-sm = "screen and (min-width: " + $sm-min-width + ")"
